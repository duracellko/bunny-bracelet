# Builds Bunny Bracelet application

name: Build Bunny Bracelet

on:
  push:
    branches:
    - main
    tags:
    - release-*
  pull_request:
    branches:
    - main
  merge_group:

defaults:
  run:
    shell: pwsh

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runner:
        - ubuntu-22.04
        - windows-2022

    runs-on: ${{ matrix.runner }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release -p:VersionRevision=${{ github.run_number }} --no-restore --verbosity normal
    - name: Test (unit tests)
      run: dotnet test ./BunnyBracelet.Tests/bin/Release/net8.0/BunnyBracelet.Tests.dll --verbosity normal --logger "trx;LogFileName=TestResults.trx"
    - name: Publish
      run: dotnet publish --configuration Release -p:VersionRevision=${{ github.run_number }} -p:PublishAot=false --verbosity normal
    - name: Publish AOT
      run: dotnet publish --configuration Release -p:VersionRevision=${{ github.run_number }} --verbosity normal
    - name: Test (system tests)
      run: dotnet test ./BunnyBracelet.SystemTests/bin/Release/net8.0/BunnyBracelet.SystemTests.dll --verbosity normal --logger "trx;LogFileName=SystemTestResults.trx"
      if: ${{ runner.os == 'Linux' }}
    - name: Publish container
      run: dotnet publish /t:PublishContainer --configuration Release -p:VersionRevision=${{ github.run_number }} -p:ContainerArchiveOutputPath=../artifacts/bunny-bracelet-container.tar.gz --verbosity normal
      if: ${{ runner.os == 'Linux' }}
    - name: Create artifacts
      run: |
        $artifacts = 'artifacts'
        if (Test-Path -Path $artifacts) {
          $artifacts = Get-Item -Path $artifacts
        } else {
          $artifacts = New-Item -Path $artifacts -ItemType Directory
        }

        Write-Host "Preparing artifacts in $($artifacts.FullName)"

        $license = Get-Item -Path 'LICENSE.txt'
        $exclude = @('appsettings.Development.json', 'web.config')

        $buildDirectory = 'BunnyBracelet/bin/Release/net8.0'
        if (Test-Path -Path $buildDirectory) {
          $buildDirectory = Get-Item -Path $buildDirectory

          # Create BunnyBracelet .NET runtime artifact
          $publishDirectory = Join-Path -Path $buildDirectory.FullName -ChildPath 'publish'
          if (Test-Path -Path $publishDirectory) {
            $artifactDirectory = Join-Path -Path $artifacts.FullName -ChildPath 'BunnyBracelet'
            $artifactDirectory = New-Item -Path $artifactDirectory -ItemType Directory

            Write-Host "Preparing artifact $($publishDirectory.FullName) -> $($artifactDirectory.FullName)"

            Get-ChildItem -Path $publishDirectory -Exclude $exclude | Copy-Item -Destination $artifactDirectory.FullName -Recurse
            $license | Copy-Item -Destination $artifactDirectory.FullName
            Get-ChildItem -Path $artifactDirectory.FullName -Recurse
          }

          # Create BunnyBracelet Linux x64 artifact
          $publishDirectory = Join-Path -Path $buildDirectory.FullName -ChildPath 'linux-x64/publish'
          if (Test-Path -Path $publishDirectory) {
            $artifactDirectory = Join-Path -Path $artifacts.FullName -ChildPath 'BunnyBracelet-linux-x64'
            $artifactDirectory = New-Item -Path $artifactDirectory -ItemType Directory

            Write-Host "Preparing artifact $($publishDirectory.FullName) -> $($artifactDirectory.FullName)"

            Get-ChildItem -Path $publishDirectory -Exclude $exclude | Copy-Item -Destination $artifactDirectory.FullName -Recurse
            $license | Copy-Item -Destination $artifactDirectory.FullName
            Get-ChildItem -Path $artifactDirectory.FullName -Recurse
          }

          # Create BunnyBracelet Windows x64 artifact
          $publishDirectory = Join-Path -Path $buildDirectory.FullName -ChildPath 'win-x64/publish'
          if (Test-Path -Path $publishDirectory) {
            $artifactDirectory = Join-Path -Path $artifacts.FullName -ChildPath 'BunnyBracelet-win-x64'
            $artifactDirectory = New-Item -Path $artifactDirectory -ItemType Directory

            Write-Host "Preparing artifact $($publishDirectory.FullName) -> $($artifactDirectory.FullName)"

            Get-ChildItem -Path $publishDirectory -Exclude $exclude | Copy-Item -Destination $artifactDirectory.FullName -Recurse
            $license | Copy-Item -Destination $artifactDirectory.FullName
            Get-ChildItem -Path $artifactDirectory.FullName -Recurse
          }
        }
    - name: Publish tests
      uses: actions/upload-artifact@v4
      with:
        name: TestResults-${{ runner.os }}
        path: TestResults/*.trx
      if: ${{ !cancelled() }}
    - name: Publish BunnyBracelet
      uses: actions/upload-artifact@v4
      with:
        name: BunnyBracelet
        path: artifacts/BunnyBracelet/
      if: ${{ runner.os == 'Linux' }}
    - name: Publish BunnyBracelet-linux-x64
      uses: actions/upload-artifact@v4
      with:
        name: BunnyBracelet-linux-x64
        path: artifacts/BunnyBracelet-linux-x64/
      if: ${{ runner.os == 'Linux' }}
    - name: Publish BunnyBracelet-win-x64
      uses: actions/upload-artifact@v4
      with:
        name: BunnyBracelet-win-x64
        path: artifacts/BunnyBracelet-win-x64/
      if: ${{ runner.os == 'Windows' }}
    - name: Publish BunnyBracelet (container)
      uses: actions/upload-artifact@v4
      with:
        name: bunny-bracelet-container
        path: artifacts/bunny-bracelet-container.tar.gz
        compression-level: 0
      if: ${{ runner.os == 'Linux' }}

  release:
    runs-on: ubuntu-22.04

    needs: build

    if: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'release-') }}

    env:
      DOCKERHUB_USERNAME: duracellko

    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
    - name: Create release artifacts
      run: |
        Compress-Archive -Path './BunnyBracelet/*' -DestinationPath './BunnyBracelet.zip'
        Compress-Archive -Path './BunnyBracelet-linux-x64/*' -DestinationPath './BunnyBracelet-linux-x64.zip'
        Compress-Archive -Path './BunnyBracelet-win-x64/*' -DestinationPath './BunnyBracelet-win-x64.zip'
    - name: Get Release version
      id: get_release_version
      run: |
        chmod a+x ./BunnyBracelet-linux-x64/BunnyBracelet
        $bunnyBraceletVersion = ./BunnyBracelet-linux-x64/BunnyBracelet --version
        Write-Output $bunnyBraceletVersion

        $releaseName = $bunnyBraceletVersion | Select-Object -First 1
        $releaseVersion = $releaseName.Replace('Bunny', '', [System.StringComparison]::OrdinalIgnoreCase)
        $releaseVersion = $releaseVersion.Replace('Bracelet', '', [System.StringComparison]::OrdinalIgnoreCase)
        $releaseVersion = $releaseVersion.Trim()
        $releaseTag = 'v' + $releaseVersion

        $actionOutput = @(
            "release_name=$releaseName"
            "release_version=$releaseVersion"
            "release_tag=$releaseTag"
        )
        Add-Content -Path $env:GITHUB_OUTPUT -Value $actionOutput
        Write-Output $actionOutput

        $bunnyBraceletVersion | Select-Object -Skip 1 -First 1 | Set-Content -Path 'ReleaseBody.md'
        Write-Output "ReleaseBody.md"
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ steps.get_release_version.outputs.release_name }}
        draft: true
        artifacts: "BunnyBracelet.zip,BunnyBracelet-linux-x64.zip,BunnyBracelet-win-x64.zip"
        bodyFile: ReleaseBody.md
        tag: ${{ github.ref_type == 'tag' && github.ref_name || steps.get_release_version.outputs.release_tag }}
    - name: Docker login
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push Docker image
      run: |
        docker image load -i bunny-bracelet-container/bunny-bracelet-container.tar.gz
        docker push --all-tags duracellko/bunny-bracelet
